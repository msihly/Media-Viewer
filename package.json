{
  "name": "media-viewer",
  "version": "2.0.0",
  "private": true,
  "author": "Mohamed Sihly",
  "description": "Media Viewer",
  "homepage": "./",
  "main": "extraResources/main.js",
  "icon": "public/favicon.ico",
  "dependencies": {
    "@alissavrk/dnd-kit-core": "^7.0.0",
    "@alissavrk/dnd-kit-sortable": "^8.0.0",
    "@electron/remote": "^2.0.8",
    "@emotion/cache": "^11.7.1",
    "@emotion/react": "^11.8.2",
    "@emotion/styled": "^11.8.1",
    "@mui/base": "^5.0.0-beta.5",
    "@mui/icons-material": "^5.14.19",
    "@mui/lab": "^5.0.0-alpha.134",
    "@mui/material": "^5.13.6",
    "@mui/styles": "^5.5.1",
    "@panzoom/panzoom": "^4.5.1",
    "@tensorflow/tfjs": "^4.10.0",
    "@tensorflow/tfjs-node": "^4.10.0",
    "@tensorflow/tfjs-node-gpu": "^4.10.0",
    "@trpc/client": "^10.30.0",
    "@trpc/server": "^10.30.0",
    "@vladmandic/face-api": "^1.7.12",
    "aws-sdk": "^2.1450.0",
    "color": "^4.2.3",
    "dayjs": "^1.11.0",
    "electron-log": "^4.4.8",
    "fluent-ffmpeg": "^2.1.2",
    "jsonfile": "^6.1.0",
    "kill-port": "^2.0.1",
    "md5-file": "^5.0.0",
    "mobx": "^6.5.0",
    "mobx-keystone": "^1.6.3",
    "mobx-react-lite": "^4.0.3",
    "mongodb-memory-server": "^8.9.3",
    "mongoose": "^6.2.8",
    "react": "^17.0.2",
    "react-dom": "^17.0.2",
    "react-draggable": "^4.4.5",
    "react-image-crop": "^10.0.6",
    "react-player": "^2.10.1",
    "react-router-dom": "^5.3.0",
    "react-toastify": "^9.0.8",
    "react-virtualized-auto-sizer": "^1.0.6",
    "react-window": "^1.8.7",
    "sharp": "^0.32.4",
    "socket.io": "^4.6.2",
    "socket.io-client": "^4.6.2",
    "tss-react": "^3.6.0",
    "util": "^0.12.5",
    "vite-plugin-electron-renderer": "0.10.1"
  },
  "devDependencies": {
    "@types/color": "^3.0.3",
    "@types/fluent-ffmpeg": "^2.1.20",
    "@types/kill-port": "^2.0.1",
    "@types/node": "^17.0.45",
    "@types/react": "^17.0.43",
    "@types/react-dom": "^17.0.14",
    "@types/react-router-dom": "^5.3.3",
    "@types/react-virtualized-auto-sizer": "^1.0.1",
    "@types/react-window": "^1.8.5",
    "@types/sharp": "^0.32.0",
    "@typescript-eslint/eslint-plugin": "^6.12.0",
    "@vitejs/plugin-react": "^4.0.3",
    "concurrently": "^7.2.2",
    "electron": "^25.1.1",
    "electron-builder": "^22.14.13",
    "electron-devtools-installer": "^3.2.0",
    "eslint": "^8.54.0",
    "eslint-plugin-tss-unused-classes": "^1.0.2",
    "mock-aws-s3": "^4.0.2",
    "nock": "^13.3.3",
    "patch-package": "^6.4.7",
    "remotedev": "^0.2.9",
    "tsc-alias": "^1.8.6",
    "typescript": "^4.6.3",
    "vite": "^4.4.7",
    "vite-plugin-svgr": "^3.2.0",
    "vite-tsconfig-paths": "^4.2.0"
  },
  "scripts": {
    "build": "npm run tsCompile && vite build && npx copyfiles -f src/face-models/**/* extraResources/face-models && npx copyfiles extraResources/**/* build",
    "check": "npm run typecheck && npm run lint",
    "dev": "npm run tsCompile && concurrently --kill-others \"SET BROWSER=none && npm start\" \"electron .\"",
    "dist": "npm run build && npm run electron-build",
    "electron-build": "electron-builder build --win --publish never",
    "lint": "eslint src/**/*{.ts,.tsx}",
    "pack": "electron-builder --dir",
    "postinstall": "electron-builder install-app-deps && patch-package",
    "start": "vite",
    "tsCompile": "tsc --p ./tsconfig.build.json && tsc-alias -p ./tsconfig.build.json",
    "typecheck": "tsc --noEmit"
  },
  "build": {
    "appId": "com.msihly.media-viewer",
    "extends": null,
    "extraMetadata": {
      "main": "build/extraResources/main.js"
    },
    "extraResources": [
      {
        "from": "./extraResources/",
        "to": "extraResources/",
        "filter": [
          "**/*"
        ]
      }
    ],
    "files": [
      "build/**/*",
      "node_modules/**/*"
    ],
    "win": {
      "artifactName": "Media-Viewer.exe",
      "icon": "build/app-icon.ico",
      "target": "portable"
    }
  },
  "proxy": "http://localhost:3333",
  "browserslist": {
    "production": [
      "last 3 chrome version"
    ],
    "development": [
      "last 3 chrome version"
    ]
  },
  "eslintConfig": {
    "root": true,
    "parser": "@typescript-eslint/parser",
    "parserOptions": {
      "project": [
        "./tsconfig.json"
      ]
    },
    "plugins": [
      "@typescript-eslint",
      "tss-unused-classes"
    ],
    "ignorePatterns": [
      "build",
      "node_modules",
      "src/face-models",
      "vite.config.ts"
    ],
    "rules": {
      "tss-unused-classes/unused-classes": "warn",
      "@typescript-eslint/no-restricted-imports": [
        "error",
        {
          "paths": [
            {
              "name": "@mui/material",
              "importNames": [
                "TextField",
                "TextFieldProps"
              ],
              "message": "Import 'Input' from 'components' instead.",
              "allowTypeImports": true
            },
            {
              "name": "@mui/material",
              "importNames": [
                "Dialog",
                "DialogActions",
                "DialogContent",
                "DialogTitle"
              ],
              "message": "Import 'Modal' from 'components' instead.",
              "allowTypeImports": true
            },
            {
              "name": "@mui/material",
              "importNames": [
                "Typography",
                "TypographyProps"
              ],
              "message": "Import 'Text' from 'components' instead.",
              "allowTypeImports": true
            },
            {
              "name": "@mui/material",
              "importNames": [
                "Accordion",
                "AccordionProps",
                "Button",
                "ButtonProps",
                "Checkbox",
                "CheckboxProps",
                "Chip",
                "Icon",
                "IconProps",
                "IconButton",
                "IconButtonProps",
                "ListItem",
                "ListItemProps",
                "Modal",
                "Tooltip",
                "TooltipProps"
              ],
              "message": "Import from 'components' instead.",
              "allowTypeImports": true
            },
            {
              "name": "@mui/material",
              "importNames": [
                "colors"
              ],
              "message": "Import from 'utils' instead.",
              "allowTypeImports": true
            },
            {
              "name": "@mui/material",
              "importNames": [
                "CSSObject"
              ],
              "message": "Import from 'tss-react' instead.",
              "allowTypeImports": true
            },
            {
              "name": "dayjs",
              "importNames": [
                "default"
              ],
              "message": "Import from 'utils' instead.",
              "allowTypeImports": true
            }
          ]
        }
      ]
    }
  }
}
